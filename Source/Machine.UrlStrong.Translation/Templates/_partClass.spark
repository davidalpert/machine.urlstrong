<macro:PartClass node="Machine.UrlStrong.Translation.Model.UrlNode">
public class ${node.ClassName} : UrlPart${node.ImplementedInterfaces}
{
  <for each="var parameter in node.Parameters">
  ${parameter.FieldDeclaration}
  </for>
  
  public ${node.ClassName}(UrlPart parent${node.AdditionalConstructorArguments})
    : base(parent)
  {
    <for each="var parameter in node.Parameters">
    ${parameter.FieldAssignment}
    AddParameter("${parameter.Name}", ${parameter.Name});
    </for>
  }
  
  public override string ToString()
  {
    <test if="node.IsRoot">
    return "/";
    <else if="node.IsOnlyParameter" />
    return Join(_parent.ToString(), ${node.Parameters.First().FieldName}.ToString());
    <else if="node.HasParameters" />
    return Join(_parent.ToString(), string.Format("${node.FormatString}", ${node.FormatStringArguments}));
    <else />
    return Join(_parent.ToString(), "${node.Name}");
    </test>
  }
  
  public override string ToParameterizedUrl()
  {
    <test if="node.IsRoot">
    return "/";
    <else if="node.IsOnlyParameter" />
    return Join(_parent.ToParameterizedUrl(), "{${node.Parameters.First().Name}}");
    <else if="node.HasParameters" />
    return Join(_parent.ToParameterizedUrl(), "${node.ToFormattedNameString()}");
    <else />
    return Join(_parent.ToParameterizedUrl(), "${node.Name}");
    </test>
  }
  
  <for each="var child in node.Children">
  ${Indent(PartAccessor(child))}
  
  </for>
  <for each="var child in node.Children">
  ${Indent(PartClass(child))}
  
  </for>
}
</macro>
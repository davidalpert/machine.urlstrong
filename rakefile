require 'rake'
require 'rake/testtask'
require 'pathname'
require 'rubygems'
require 'fileutils'
include FileUtils

class String
  def slash(path)
    if self =~ /\/$/
      return self + path
    end

    return self + '/' + path
  end
end

version = 'v3.5'
compileTarget = 'debug'
project = "Machine.UrlStrong"
frameworkDir = File.join(ENV['windir'].dup, 'Microsoft.NET', 'Framework', version)
msbuild = File.join(frameworkDir, 'msbuild.exe')

task :setup => [ "setup:all" ]

file ".setup-done" => [ "rakefile" ] do
  Rake::Task["setup:all"].invoke
end

namespace :setup do
  task :all do
    touch ".setup-done"
  end
end

desc "Build and run specs"
task :default => [ "build", "specs:run" ]

desc "Build"
task :build => [ ".setup-done" ] do
  sh "#{msbuild} Source/#{project}.sln"
end

namespace :generator do
  directory "Build/Temp"
  task :install => ["Build/Temp", :build] do
    mkdir_p "Build/Temp"
    cp(FileList["Source/Machine.UrlStrong.VisualStudioCodeGenerator/bin/Debug/*.dll"], "Build/Temp")
    sh "Tools\\regasm.exe /codebase Build\\Temp\\Machine.UrlStrong.VisualStudioCodeGenerator.dll" 
  end
end

namespace :specs do
  task :view => :run do
    system "start Specs/#{project}.Specs.html"
  end

  task :run do
    puts 'Running Specs...'
    sh "Libraries/machine/specifications/mspec.exe", "Source/Machine.UrlStrong.Specs/bin/Debug/Machine.UrlStrong.Specs.dll", "--html", "specs/#{project}.Specs.html"
    puts "Wrote specs to Specs/#{project}.Specs.html, run 'rake specs:view' to see them"
  end
end

desc "Open solution in VS"
task :sln do
  Thread.new do
    system "devenv Source/#{project}.sln"
  end
end

desc "Rebuild"
task :rebuild => [ ".setup-done" ] do
  sh "#{msbuild} #{project}.sln /t:Rebuild"
end

desc "Clean"
task :clean do
  sh "#{msbuild} #{project}.sln /t:Clean"
end

task :open_sample do
  sh "Source\\Machine.UrlStrong.Generator\\bin\\debug\\urlstrong.exe Source/Machine.UrlStrong.Sample/sample.urls sample.cs"
  sh "notepad sample.cs"
  rm "sample.cs"
end
